{"attributes":{"kind":"const","backlinks":[],"name":"tests","title":"tests","symbol_id":"Invariants.##InlineTest-01b48f5c342f65df7fcd07f28f0d2cacbb09f0a0.tests","public":false,"module_id":"Invariants.##InlineTest-01b48f5c342f65df7fcd07f28f0d2cacbb09f0a0"},"tag":"documentation","children":[{"attributes":{},"tag":"codecell","children":[{"attributes":{"lang":"julia"},"tag":"codeinput","children":[{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":["Invariants.##InlineTest-01b48f5c342f65df7fcd07f28f0d2cacbb09f0a0.tests"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"(tests = Any[], news = Any[(ts = (&quot;Invariant&quot;, quote\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariant.jl:197 =#</span>\n    inv = exampleinvariant()\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariant.jl:198 =#</span>\n    testinvariant(inv, 1)\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariant.jl:200 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariant.jl:200 =#</span> @test isnothing(satisfies(inv, 1))\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariant.jl:201 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariant.jl:201 =#</span> @test occursin(&quot;should be&quot;, satisfies(inv, &quot;&quot;))\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariant.jl:202 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariant.jl:202 =#</span> @test occursin(&quot;larger&quot;, satisfies(inv, -1))\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariant.jl:203 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariant.jl:203 =#</span> @test occursin(&quot;0&quot;, description(inv))\nend), source = :(<span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariant.jl:196 =#</span>)), (ts = (&quot;Combinators&quot;, quote\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/combinators.jl:136 =#</span>\n    i = exampleinvariant()\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/combinators.jl:137 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/combinators.jl:137 =#</span> @test invariant([i, i], &quot;test&quot;) isa AllInvariant\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/combinators.jl:138 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/combinators.jl:138 =#</span> @test invariant([i, i], &quot;test&quot;, :all) isa AllInvariant\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/combinators.jl:139 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/combinators.jl:139 =#</span> @test invariant([i, i], &quot;test&quot;, :any) isa AnyInvariant\nend), source = :(<span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/combinators.jl:135 =#</span>)), (ts = (&quot;WrapIO&quot;, quote\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:122 =#</span>\n    function printwrapped(x; indentfirst = true, kwargs...)\n        <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:122 =#</span>\n        <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:123 =#</span>\n        buf = IOBuffer()\n        <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:124 =#</span>\n        io = WrapIO(buf; indentfirst, kwargs...)\n        <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:125 =#</span>\n        print(io, x)\n        <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:126 =#</span>\n        String(take!(buf))\n    end\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:128 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:128 =#</span> @test printwrapped(&quot;hello&quot;, indent = &quot;  &quot;) == &quot;  hello&quot;\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:129 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:129 =#</span> @test printwrapped(&quot;hello&quot;, indent = &quot;  &quot;) == &quot;  hello&quot;\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:130 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:130 =#</span> @test printwrapped(&quot;aaaa\\nbbbb&quot;, width = 2) == &quot;aa\\naa\\nbb\\nbb&quot;\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:131 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:131 =#</span> @testset &quot;Composition&quot; begin\n            <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:132 =#</span>\n            buf = IOBuffer()\n            <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:133 =#</span>\n            io = WrapIO(WrapIO(buf, indent = &quot;  &quot;), indent = &quot;  &quot;)\n            <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:134 =#</span>\n            <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:134 =#</span> @test io isa WrapIO\n            <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:135 =#</span>\n            <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:135 =#</span> @test io.io isa IOBuffer\n            <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:136 =#</span>\n            <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:136 =#</span> @test io.indent == &quot;    &quot;\n        end\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:140 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:140 =#</span> @test printwrapped(&quot;\\naaaa\\nbbbb&quot;, width = 2) == &quot;\\naa\\naa\\nbb\\nbb&quot;\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:141 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:141 =#</span> @test printwrapped(&quot;\\naa\\nbb&quot;, width = 2, indent = &quot; &quot;) == &quot;\\n a\\n a\\n b\\n b&quot;\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:142 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:142 =#</span> @test printwrapped(&quot;\\n a\\nbb&quot;, width = 2, indent = &quot; &quot;) == &quot;\\n  \\n a\\n b\\n b&quot;\nend), source = :(<span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:121 =#</span>)), (ts = (&quot;IndentIO&quot;, quote\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:184 =#</span>\n    io = IndentIO(IOBuffer(), 2)\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:185 =#</span>\n    write(io, &quot;hello&quot;)\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:186 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:186 =#</span> @test String(take!(io)) == &quot;  hello&quot;\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:188 =#</span>\n    io = IndentIO(IOBuffer(), 2)\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:189 =#</span>\n    write(io, &quot;hello\\nworld&quot;)\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:190 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:190 =#</span> @test String(take!(io)) == &quot;  hello\\n  world&quot;\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:192 =#</span>\n    io = IndentIO(IOBuffer(), 2, indentfirst = false)\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:193 =#</span>\n    write(io, &quot;hello\\nworld&quot;)\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:194 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:194 =#</span> @test String(take!(io)) == &quot;hello\\n  world&quot;\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:196 =#</span>\n    io = IndentIO(IndentIO(IOBuffer(), 2), 2)\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:197 =#</span>\n    write(io, &quot;hello\\nworld&quot;)\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:198 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:198 =#</span> @test String(take!(io)) == &quot;    hello\\n    world&quot;\nend), source = :(<span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/display.jl:183 =#</span>)), (ts = (&quot;wrap&quot;, quote\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:59 =#</span>\n    inv = exampleinvariant()\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:60 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:60 =#</span> @test invariant(inv) isa Invariant\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:61 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:61 =#</span> @test description(invariant(inv, description = &quot;x&quot;)) == &quot;x&quot;\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:62 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:62 =#</span> @test title(invariant(inv, title = &quot;x&quot;)) == &quot;x&quot;\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:64 =#</span>\n    wrap = WrapInvariant(inv, &quot;x&quot;, &quot;x&quot;, identity, (_-&gt;begin\n                    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:64 =#</span>\n                    true\n                end))\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:65 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:65 =#</span> @test description(wrap) == &quot;x&quot;\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:66 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:66 =#</span> @test title(wrap) == &quot;x&quot;\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:67 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:67 =#</span> @test satisfies(wrap, 1) isa Nothing\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:68 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:68 =#</span> @test satisfies(wrap, -1) isa String\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:70 =#</span>\n    <span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:70 =#</span> @test invariant(inv) === inv\nend), source = :(<span class=\"sgr90\">#= /home/runner/.julia/packages/Invariants/NDc7K/src/invariants/wrap.jl:58 =#</span>))], map = Dict{Union{Expr, String}, Int64}())"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}