{"attributes":{"backlinks":[],"path":"/home/runner/.julia/packages/Invariants/hupRc/docs/guide.md","title":"Tutorial"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["Tutorial"],"type":"node"},{"attributes":{},"tag":"p","children":["Invariants.jl gives you the tools to define and compose invariants to give more helpful error messages to package users. This page gives an overview of the different features of invariants."],"type":"node"},{"attributes":{},"tag":"h2","children":["Defining and checking invariants"],"type":"node"},{"attributes":{},"tag":"p","children":["An invariant is a function that takes an input and either returns an error message if the input does not satisfy the invariant or ",{"attributes":{},"tag":"code","children":["nothing"],"type":"node"}," if it does. We use the ",{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.invariant"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["invariant"],"type":"node"}],"type":"node"}," function to create them. Let's create an invariant that checks whether a number is positive:"],"type":"node"},{"attributes":{},"tag":"codecell","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"USING","children":[{"attributes":{},"tag":"COLON","children":[{"attributes":{},"tag":"USING","children":["using"],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/Invariants"},"tag":"reference","children":["Invariants"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COLON","children":[":"],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/Invariants"},"tag":"reference","children":["Invariants"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.invariant"},"tag":"reference","children":["invariant"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check"},"tag":"reference","children":["check"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"IDENTIFIER","children":["inv"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DO","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.invariant"},"tag":"reference","children":["invariant"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"STRING","children":["Is positive"],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DO","children":["do"],"type":"node"},{"attributes":{},"tag":"ANON_FUNC","children":[{"attributes":{},"tag":"TUPLE","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["n"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"BLOCK","children":[{"attributes":{},"tag":"NEWLINE_WS","children":["\n    "],"type":"node"},{"attributes":{},"tag":"IF","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["n"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"GREATER","children":[">"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["0"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CONDITIONAL","children":["?"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"COLON","children":[":"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"STRING","children":["n should be a positive number!"],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"END","children":["end"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"Invariant(&quot;Is positive&quot;)\n"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["We can then check whether the invariant holds for an input using ",{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["check"],"type":"node"}],"type":"node"},":"],"type":"node"},{"attributes":{},"tag":"codecell","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"USING","children":[{"attributes":{},"tag":"COLON","children":[{"attributes":{},"tag":"USING","children":["using"],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/Invariants"},"tag":"reference","children":["Invariants"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COLON","children":[":"],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check"},"tag":"reference","children":["check"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check"},"tag":"reference","children":["check"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["inv"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["1"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"<span class=\"sgr32\">✔ Invariant satisfied:</span> Is positive"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"codecell","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check"},"tag":"reference","children":["check"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["inv"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["-1"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"<span class=\"sgr31\"><span class=\"sgr1\">⨯ Invariant not satisfied:</span></span><span class=\"sgr1\"> Is positive</span>\n\nn should be a positive number!\n"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{"class":"note"},"tag":"admonition","children":[{"attributes":{},"tag":"admonitiontitle","children":["Checking invariants"],"type":"node"},{"attributes":{},"tag":"admonitionbody","children":[{"attributes":{},"tag":"p","children":["While ",{"attributes":{},"tag":"code","children":["check"],"type":"node"}," gives you a nicely formatted report, you can also use ",{"attributes":{},"tag":"code","children":["check_bool"],"type":"node"}," to get a Boolean value or ",{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check_throw"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["check_throw"],"type":"node"}],"type":"node"}," to throw an error when an invariant is not satisfied."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h2","children":["Combining invariants"],"type":"node"},{"attributes":{},"tag":"p","children":["In real use cases, many invariants can be logically decomposed into smaller invariants. For example, interfaces often require a data structure to implement multiple methods."],"type":"node"},{"attributes":{},"tag":"p","children":["We can logically compose invariants with the ",{"attributes":{},"tag":"code","children":["invariant(title, [inv1, inv2, ...])"],"type":"node"}," method. Let's take the ",{"attributes":{"reftype":"symbol","document_id":"references/Invariants.hasmethod_invariant"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["hasmethod_invariant"],"type":"node"}],"type":"node"}," helper introduced on the ",{"attributes":{"reftype":"document","href":"examples.md","title":"","document_id":"documents/docs/examples.md"},"tag":"reference","children":["Examples"],"type":"node"}," page and build an invariant that checks that a data structure supports indexing and is non-empty."],"type":"node"},{"attributes":{},"tag":"codecell","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"IDENTIFIER","children":["inv_indexing"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.invariant"},"tag":"reference","children":["invariant"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n    "],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"STRING","children":["`xs` is indexable"],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n    "],"type":"node"},{"attributes":{},"tag":"VECT","children":[{"attributes":{},"tag":"LSQUARE","children":["["],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n        "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"DOT","children":[{"attributes":{"reftype":"symbol","document_id":"references/Invariants"},"tag":"reference","children":["Invariants"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{"reftype":"symbol","document_id":"references/Invariants.hasmethod_invariant"},"tag":"reference","children":["hasmethod_invariant"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["length"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"COLON","children":[":"],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["xs"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n        "],"type":"node"},{"attributes":{},"tag":"DO","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.invariant"},"tag":"reference","children":["invariant"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"STRING","children":["`xs is not empty`"],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DO","children":["do"],"type":"node"},{"attributes":{},"tag":"ANON_FUNC","children":[{"attributes":{},"tag":"TUPLE","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"TUPLE","children":[{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["xs"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"BLOCK","children":[{"attributes":{},"tag":"NEWLINE_WS","children":["\n            "],"type":"node"},{"attributes":{},"tag":"IF","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["isempty"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["xs"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CONDITIONAL","children":["?"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"STRING","children":["`xs` is empty!"],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"COLON","children":[":"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n        "],"type":"node"}],"type":"node"},{"attributes":{},"tag":"END","children":["end"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n        "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"DOT","children":[{"attributes":{"reftype":"symbol","document_id":"references/Invariants"},"tag":"reference","children":["Invariants"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{"reftype":"symbol","document_id":"references/Invariants.hasmethod_invariant"},"tag":"reference","children":["hasmethod_invariant"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["Base"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["getindex"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"COLON","children":[":"],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["xs"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"COLON","children":[":"],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["idx"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"PAIR_ARROW","children":["=>"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["1"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n    "],"type":"node"},{"attributes":{},"tag":"RSQUARE","children":["]"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n    "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["inputfn"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"ANON_FUNC","children":[{"attributes":{},"tag":"IDENTIFIER","children":["xs"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"ANON_FUNC","children":["->"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"TUPLE","children":[{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"PARAMETERS","children":[{"attributes":{},"tag":"SEMICOLON","children":[";"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["xs"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check"},"tag":"reference","children":["check"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["inv_indexing"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"VECT","children":[{"attributes":{},"tag":"LSQUARE","children":["["],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["1"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["2"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["3"],"type":"node"},{"attributes":{},"tag":"RSQUARE","children":["]"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"<span class=\"sgr32\">✔ Invariant satisfied:</span> `xs` is indexable"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["This has two advantages:"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["We can reuse previously defined invariants"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":["We get specific error messages based on which constituent invariants were not satisfied"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Let's see the second point in action, by passing in inputs that violate different invariants."],"type":"node"},{"attributes":{},"tag":"codecell","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check"},"tag":"reference","children":["check"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["inv_indexing"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"<span class=\"sgr31\"><span class=\"sgr1\">⨯ Invariant not satisfied:</span></span><span class=\"sgr1\"> `xs` is indexable</span>\n<span class=\"sgr2\">All invariants listed below should be satisfied:\n\n </span><span class=\"sgr31\">⨯</span> Method <span class=\"sgr36\">Base.length(xs)</span> implemented\n\n    When calling <span class=\"sgr36\">length</span>, got a <span class=\"sgr36\">MethodError</span>. This means that there is no method\n    implemented for the given arguments. To fix this, please implement the\n    following method:\n    \n        Base.length<span class=\"sgr2\">(</span>xs<span class=\"sgr2\">::</span><span class=\"sgr1\">Nothing</span><span class=\"sgr2\">)</span>\n    \n<span class=\"sgr33\">?</span> <span class=\"sgr36\">xs is not empty</span>\n<span class=\"sgr33\">?</span> Method <span class=\"sgr36\">Base.getindex(xs, idx)</span> implemented\n"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"codecell","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check"},"tag":"reference","children":["check"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["inv_indexing"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"VECT","children":[{"attributes":{},"tag":"LSQUARE","children":["["],"type":"node"},{"attributes":{},"tag":"RSQUARE","children":["]"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"<span class=\"sgr31\"><span class=\"sgr1\">⨯ Invariant not satisfied:</span></span><span class=\"sgr1\"> `xs` is indexable</span>\n<span class=\"sgr2\">All invariants listed below should be satisfied:\n\n </span><span class=\"sgr32\">✔</span><span class=\"sgr2\"> Method <span class=\"sgr36\">Base.length(xs)</span> implemented</span>\n<span class=\"sgr31\">⨯</span> <span class=\"sgr36\">xs is not empty</span>\n\n    `xs` is empty!\n    \n<span class=\"sgr33\">?</span> Method <span class=\"sgr36\">Base.getindex(xs, idx)</span> implemented\n"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"codecell","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check"},"tag":"reference","children":["check"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["inv_indexing"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"VECT","children":[{"attributes":{},"tag":"LSQUARE","children":["["],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["1"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["2"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["3"],"type":"node"},{"attributes":{},"tag":"RSQUARE","children":["]"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"<span class=\"sgr32\">✔ Invariant satisfied:</span> `xs` is indexable"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}