{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"InvariantsCore/src/highlevel.jl","docid":"sourcefiles/InvariantsCore/src/highlevel.jl"},{"tag":"sourcefile","title":"InvariantsCore/src/wrapinvariant.jl","docid":"sourcefiles/InvariantsCore/src/wrapinvariant.jl"},{"tag":"documentation","title":"AbstractInvariant","docid":"references/InvariantsCore.AbstractInvariant"},{"tag":"sourcefile","title":"InvariantsCore/src/invariant.jl","docid":"sourcefiles/InvariantsCore/src/invariant.jl"},{"tag":"sourcefile","title":"InvariantsCore/src/compose.jl","docid":"sourcefiles/InvariantsCore/src/compose.jl"},{"tag":"sourcefile","title":"Invariants/src/Invariants.jl","docid":"sourcefiles/Invariants/src/Invariants.jl"},{"tag":"sourcefile","title":"InvariantsCore/src/interface.jl","docid":"sourcefiles/InvariantsCore/src/interface.jl"}],"methods":[{"line":23,"file":"/home/runner/.julia/packages/InvariantsCore/gbWvW/src/compose.jl","method_id":"InvariantsCore.satisfies_1","symbol_id":"InvariantsCore.satisfies","filedoc":"sourcefiles/InvariantsCore/src/compose.jl","signature":"satisfies(invs::InvariantsCore.AllInvariant, input)"},{"line":60,"file":"/home/runner/.julia/packages/InvariantsCore/gbWvW/src/compose.jl","method_id":"InvariantsCore.satisfies_2","symbol_id":"InvariantsCore.satisfies","filedoc":"sourcefiles/InvariantsCore/src/compose.jl","signature":"satisfies(invs::InvariantsCore.AnyInvariant, input)"},{"line":28,"file":"/home/runner/.julia/packages/InvariantsCore/gbWvW/src/invariant.jl","method_id":"InvariantsCore.satisfies_3","symbol_id":"InvariantsCore.satisfies","filedoc":"sourcefiles/InvariantsCore/src/invariant.jl","signature":"satisfies(inv::InvariantsCore.Invariant, input)"},{"line":24,"file":"/home/runner/.julia/packages/InvariantsCore/gbWvW/src/wrapinvariant.jl","method_id":"InvariantsCore.satisfies_4","symbol_id":"InvariantsCore.satisfies","filedoc":"sourcefiles/InvariantsCore/src/wrapinvariant.jl","signature":"satisfies(wrap::InvariantsCore.WrapInvariant, input)"}],"name":"satisfies","title":"satisfies","symbol_id":"InvariantsCore.satisfies","public":false,"module_id":"InvariantsCore"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["satisfies(invariant, input) -> nothing | errormessage\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Check if ",{"attributes":{},"tag":"code","children":["input"],"type":"node"}," satisfies an ",{"attributes":{},"tag":"code","children":["invariant"],"type":"node"},". If it does, return ",{"attributes":{},"tag":"code","children":["nothing"],"type":"node"},". Otherwise return an error message explaining why the invariant is violated."],"type":"node"}],"type":"node"}],"type":"node"}