{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"InvariantsCore/src/highlevel.jl","docid":"sourcefiles/InvariantsCore/src/highlevel.jl"},{"tag":"documentation","title":"AbstractInvariant","docid":"references/InvariantsCore.AbstractInvariant"},{"tag":"sourcefile","title":"InvariantsCore/src/compose.jl","docid":"sourcefiles/InvariantsCore/src/compose.jl"},{"tag":"document","title":"Tutorial","docid":"documents/docs/guide.md"},{"tag":"sourcefile","title":"Invariants/src/invariants/hasmethod.jl","docid":"sourcefiles/Invariants/src/invariants/hasmethod.jl"},{"tag":"sourcefile","title":"Invariants/src/Invariants.jl","docid":"sourcefiles/Invariants/src/Invariants.jl"},{"tag":"documentation","title":"Invariant","docid":"references/InvariantsCore.Invariant"},{"tag":"document","title":"Invariants","docid":"documents/README.md"}],"methods":[{"line":111,"file":"/home/runner/.julia/packages/InvariantsCore/G0vUV/src/highlevel.jl","method_id":"InvariantsCore.invariant_1","symbol_id":"InvariantsCore.invariant","filedoc":"sourcefiles/InvariantsCore/src/highlevel.jl","signature":"invariant(inv::InvariantsCore.Invariant; title, inputfn, description, format)"},{"line":99,"file":"/home/runner/.julia/packages/InvariantsCore/G0vUV/src/highlevel.jl","method_id":"InvariantsCore.invariant_2","symbol_id":"InvariantsCore.invariant","filedoc":"sourcefiles/InvariantsCore/src/highlevel.jl","signature":"invariant(inv::InvariantsCore.AbstractInvariant; title, inputfn, description, format)"},{"line":84,"file":"/home/runner/.julia/packages/InvariantsCore/G0vUV/src/highlevel.jl","method_id":"InvariantsCore.invariant_3","symbol_id":"InvariantsCore.invariant","filedoc":"sourcefiles/InvariantsCore/src/highlevel.jl","signature":"invariant(title, invariants::AbstractVector{<:InvariantsCore.AbstractInvariant}; kwargs...)"},{"line":87,"file":"/home/runner/.julia/packages/InvariantsCore/G0vUV/src/highlevel.jl","method_id":"InvariantsCore.invariant_4","symbol_id":"InvariantsCore.invariant","filedoc":"sourcefiles/InvariantsCore/src/highlevel.jl","signature":"invariant(title, invariants::AbstractVector{<:InvariantsCore.AbstractInvariant}, ::typeof(all; kwargs...)"},{"line":91,"file":"/home/runner/.julia/packages/InvariantsCore/G0vUV/src/highlevel.jl","method_id":"InvariantsCore.invariant_5","symbol_id":"InvariantsCore.invariant","filedoc":"sourcefiles/InvariantsCore/src/highlevel.jl","signature":"invariant(title, invariants::AbstractVector{<:InvariantsCore.AbstractInvariant}, ::typeof(any; kwargs...)"},{"line":79,"file":"/home/runner/.julia/packages/InvariantsCore/G0vUV/src/highlevel.jl","method_id":"InvariantsCore.invariant_6","symbol_id":"InvariantsCore.invariant","filedoc":"sourcefiles/InvariantsCore/src/highlevel.jl","signature":"invariant(fn, title::String; kwargs...)"}],"name":"invariant","title":"invariant","symbol_id":"InvariantsCore.invariant","public":false,"module_id":"InvariantsCore"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["invariant(fn, title; kwargs...)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Create an invariant with name ",{"attributes":{},"tag":"code","children":["title"],"type":"node"}," that checks an input against ",{"attributes":{},"tag":"code","children":["fn"],"type":"node"}," which returns either ",{"attributes":{},"tag":"code","children":["nothing"],"type":"node"}," when the invariant is satisfied, or an error message when the invariant is violated."],"type":"node"},{"attributes":{"lang":""},"tag":"codeblock","children":["invariant(inv; title=title(inv), kwargs...)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Wrap an invariant ",{"attributes":{},"tag":"code","children":["inv"],"type":"node"},", replacing some of its attributes."],"type":"node"},{"attributes":{"lang":""},"tag":"codeblock","children":["invariant(title, invariants, all; kwargs...)\ninvariant(title, invariants, any; kwargs...)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Combine multiple invariants ",{"attributes":{},"tag":"code","children":["invs"],"type":"node"}," logically. The third argument defines how they are combined. If it is ",{"attributes":{},"tag":"code","children":["all"],"type":"node"},", the resulting invariant requires all ",{"attributes":{},"tag":"code","children":["invariants"],"type":"node"}," to pass, while a value of ",{"attributes":{},"tag":"code","children":["any"],"type":"node"}," results in an invariant where only one of the ",{"attributes":{},"tag":"code","children":["invariants"],"type":"node"}," has to be satisfied."],"type":"node"},{"attributes":{},"tag":"h2","children":["Keyword arguments"],"type":"node"},{"attributes":{},"tag":"p","children":["Every method additionally accepts the following keyword arguments:"],"type":"node"},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["description::String = \"\""],"type":"node"},": A description of the invariant that gives explanation and points to related resources."],"type":"node"}],"type":"node"},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["inputfn = identity"],"type":"node"},": A function that is applied to an input before checking. Useful when composing multiple invariants."],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h2","children":["Examples"],"type":"node"},{"attributes":{},"tag":"p","children":["Basic usage:"],"type":"node"},{"attributes":{},"tag":"codecell","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"USING","children":[{"attributes":{},"tag":"USING","children":["using"],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/Invariants"},"tag":"reference","children":["Invariants"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"IDENTIFIER","children":["inv"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DO","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.invariant"},"tag":"reference","children":["invariant"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"STRING","children":["Is negative"],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DO","children":["do"],"type":"node"},{"attributes":{},"tag":"ANON_FUNC","children":[{"attributes":{},"tag":"TUPLE","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["n"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"BLOCK","children":[{"attributes":{},"tag":"NEWLINE_WS","children":["\n    "],"type":"node"},{"attributes":{},"tag":"IF","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["n"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"LESS","children":["<"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["0"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CONDITIONAL","children":["?"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["nothing"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"COLON","children":[":"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"STRING","children":["`n` is not negative!"],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"END","children":["end"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"Invariant(&quot;Is negative&quot;)\n"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Successful check:"],"type":"node"},{"attributes":{},"tag":"codecell","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check"},"tag":"reference","children":["check"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["inv"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["-1"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"<span class=\"sgr32\">✔ Invariant satisfied:</span> Is negative"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Failing check:"],"type":"node"},{"attributes":{},"tag":"codecell","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check"},"tag":"reference","children":["check"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["inv"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["1"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"<span class=\"sgr31\"><span class=\"sgr1\">⨯ Invariant not satisfied:</span></span><span class=\"sgr1\"> Is negative</span>\n\n`n` is not negative!\n"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Or just get a Bool:"],"type":"node"},{"attributes":{},"tag":"codecell","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"TUPLE","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check"},"tag":"reference","children":["check"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Bool"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["inv"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["-1"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check"},"tag":"reference","children":["check"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["Bool"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["inv"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["1"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"(true, false)"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Throw an error when an invariant is not satisfied:"],"type":"node"},{"attributes":{},"tag":"codecell","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/InvariantsCore.check_throw"},"tag":"reference","children":["check_throw"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["inv"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["1"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"LoadError(&quot;string&quot;, 1, InvariantsCore.InvariantException{InvariantsCore.Invariant, String}(Invariant(&quot;Is negative&quot;)\n, &quot;`n` is not negative!&quot;))"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}